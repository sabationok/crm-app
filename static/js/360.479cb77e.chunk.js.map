{"version":3,"file":"static/js/360.479cb77e.chunk.js","mappings":"wIAEaA,GAAUC,EAAAA,EAAAA,iBAUvB,KARqB,SAAAC,GACnB,OACE,+BACE,SAACF,EAAQG,SAAT,CAAkBC,OAAK,UAAOF,GAA9B,SAAwCA,EAAMG,YAGnD,C,kKCsDD,UAnDoB,SAAC,GAA0B,IAAD,IAAvBC,KAAAA,OAAuB,MAAhB,UAAgB,EAC5C,GAA6BC,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,IAAiBC,EAAAA,GAAAA,aAAhDC,GAAP,eACA,GAA8BH,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,IAAiBC,EAAAA,GAAAA,cAAjDE,GAAP,eACA,GAAmCJ,EAAAA,EAAAA,UAASE,EAAAA,GAAAA,eAArCG,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAASC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAcJ,IAEnCK,EAAY,CAChBC,SAAS,SAAC,MAAD,UAAsBV,IAC/BM,QAAQ,SAAC,MAAD,UAAqBP,IAC7BY,YAAY,SAAC,MAAD,UAAwBV,MAGtCW,EAAAA,EAAAA,YAAU,WAER,GADAV,GAASW,EAAAA,EAAAA,KAAwB,IAC5BT,EAAL,CAEO,GAAKE,EAMZ,OAFAJ,GAASY,EAAAA,EAAAA,IAAqBR,IAEvB,WACLJ,GAASW,EAAAA,EAAAA,KAAwB,IACjCX,GAASY,EAAAA,EAAAA,IAAqB,MAC/B,EARCC,EAAAA,GAAAA,MAAY,kLAEb,CAOF,GAAE,CAACb,EAAUE,EAAIE,IAElB,IAAMU,EAAM,CACVC,UAAWtB,GAGb,OACE,+BACE,UAAC,MAAD,kBAAkBqB,GAAlB,eACE,UAAC,KAAD,WACGP,EAAUC,QACVD,EAAUH,OACVG,EAAUE,eAEb,SAAC,KAAD,UAAchB,EAAOc,EAAUd,GAAQc,EAAUC,eAIxD,C","sources":["components/AppPages/PageProvider.jsx","components/AppPages/PageRefunds.jsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport const PageCTX = createContext();\nexport const usePage = () => useContext(PageCTX);\nconst PageProvider = props => {\n  return (\n    <>\n      <PageCTX.Provider value={{ ...props }}>{props.children}</PageCTX.Provider>\n    </>\n  );\n};\n\nexport default PageProvider;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PageProvider from './PageProvider';\nimport { BlockRefundsList, BlockRefundInspect, BlockRefundInfo } from 'components/Blocks';\nimport { MinTabletXl, MaxToTablet } from 'components/DeviceTypeInformer/DeviceTypeController';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actionSetPageGridChange, actionSetPageObjData } from 'redux/page/pageActions';\nimport { blocksNames, getBlockSettings } from 'data';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getRefundById } from 'redux/selectors';\n// import s from './PageRefunds.module.scss';\n\nconst PageRefunds = ({ path = 'refunds' }) => {\n  const [BlockRefundInfoSet] = useState(getBlockSettings(blocksNames.RefundInfo));\n  const [BlockRefundsListSet] = useState(getBlockSettings(blocksNames.RefundsList));\n  const [BlockRefundInspectionSet] = useState(blocksNames.RefundInspect);\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const refund = useSelector(getRefundById(id));\n\n  const BlocksMap = {\n    refunds: <BlockRefundsList {...BlockRefundsListSet} />,\n    refund: <BlockRefundInfo {...BlockRefundInfoSet} />,\n    inspection: <BlockRefundInspect {...BlockRefundInspectionSet} />,\n  };\n\n  useEffect(() => {\n    dispatch(actionSetPageGridChange(true));\n    if (!id) {\n      return;\n    } else if (!refund) {\n      toast.error('За таким ID результатів не знайдено');\n      return;\n    }\n    dispatch(actionSetPageObjData(refund));\n\n    return () => {\n      dispatch(actionSetPageGridChange(false));\n      dispatch(actionSetPageObjData(null));\n    };\n  }, [dispatch, id, refund]);\n\n  const ctx = {\n    indexPath: path,\n  };\n\n  return (\n    <>\n      <PageProvider {...ctx}>\n        <MinTabletXl>\n          {BlocksMap.refunds}\n          {BlocksMap.refund}\n          {BlocksMap.inspection}\n        </MinTabletXl>\n        <MaxToTablet>{path ? BlocksMap[path] : BlocksMap.refunds}</MaxToTablet>\n      </PageProvider>\n    </>\n  );\n};\nPageRefunds.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default PageRefunds;\n"],"names":["PageCTX","createContext","props","Provider","value","children","path","useState","getBlockSettings","blocksNames","BlockRefundInfoSet","BlockRefundsListSet","BlockRefundInspectionSet","dispatch","useDispatch","id","useParams","refund","useSelector","getRefundById","BlocksMap","refunds","inspection","useEffect","actionSetPageGridChange","actionSetPageObjData","toast","ctx","indexPath"],"sourceRoot":""}