{"version":3,"file":"static/js/701.6741f4b7.chunk.js","mappings":"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","sources":["webpack://crm-app/./src/components/TableList/TableList.module.scss?3cbc","components/TableList/TableContext.jsx","webpack://crm-app/./src/components/TableList/TebleCells/TableCells.module.scss?4c72","components/TableList/TebleCells/CellTitle.jsx","webpack://crm-app/./src/components/TableList/TableRows/TableRow.module.scss?64c3","components/TableList/TableRows/TableHeadRow.jsx","components/TableList/TableHead.jsx","components/TableList/TableRows/RowContext.jsx","components/TableList/TebleCells/CellText.jsx","components/TableList/TableRows/TableRow.jsx","components/TableList/TableBody.jsx","components/TableList/BlockTable.jsx","../node_modules/nanoid/index.browser.js","data/ordersTableTitles.js","webpack://crm-app/./src/components/Pages/PageOrders/PageOrders.module.scss?d515","components/Pages/PageOrders/PageOrders.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"table\":\"TableList_table__ngc4N\",\"tHead\":\"TableList_tHead__W19Yb\",\"tBody\":\"TableList_tBody__qz-DX\"};","import { useContext, createContext, useState } from 'react';\n// import cloneDeep from 'lodash.clonedeep';\n// import { useSelector } from 'react-redux';\n// import { selectPosts } from 'redux/selectors';\n// import { applyFounder } from 'components/BlockWithList/BlockUtils/founder';\nimport { useBlock } from 'components/Block/BlockContext';\nimport ts from './TableList.module.scss';\n\nexport const TableCNTXT = createContext();\nexport const useTable = () => useContext(TableCNTXT);\n\nconst TableContext = ({ children, value }) => {\n  const { tableTitles = [] } = useBlock();\n  // const { searchQuery, searchParam } = useSelector(selectPosts);\n  const [selectedAll, setSelectedAll] = useState(false);\n  // const [tableDataCloned, setTableDateCloned] = useState([]);\n  // const [foundedPosts, setFoundedPosts] = useState([]);\n  const rowGrid = {\n    display: 'grid',\n    // gridTemplateColumns: `repeat(${tableTitles.length}, max-content)`,\n    gridTemplateColumns: `repeat(${tableTitles.length}, 100px)`,\n  };\n\n  // useEffect(() => {\n  //   if (tableData.length !== 0) {\n  //     setTableDateCloned(cloneDeep(tableData));\n  //     return;\n  //   }\n  // }, [tableData]);\n\n  // useEffect(() => {\n  //   setFoundedPosts(\n  //     applyFounder({\n  //       searchParam: searchParam,\n  //       searchQuery: searchQuery,\n  //       data: tableDataCloned,\n  //     })\n  //   );\n  // }, [searchParam, searchQuery, tableDataCloned]);\n\n  return (\n    <TableCNTXT.Provider\n      value={{\n        ts,\n        ...value,\n        rowGrid,\n        tableTitles: tableTitles,\n        setSelectedAll: setSelectedAll,\n        selectedAll: selectedAll,\n        // visiblePosts: foundedPosts,\n      }}\n    >\n      {children}\n    </TableCNTXT.Provider>\n  );\n};\n\nexport default TableContext;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"TableCells_title__uc2M1\",\"coll\":\"TableCells_coll__jUPDv\",\"selected\":\"TableCells_selected__cfxa2\",\"cellInner\":\"TableCells_cellInner__Qolij\",\"cellInnerWrap\":\"TableCells_cellInnerWrap__EeyM8\",\"empty\":\"TableCells_empty__bku02\",\"price\":\"TableCells_price__jtWWE\",\"currency\":\"TableCells_currency__bTTZf\",\"commision\":\"TableCells_commision__V8R+W\",\"stock\":\"TableCells_stock__iPkCd\",\"productionTime\":\"TableCells_productionTime__9+mZc\"};","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { useRow } from '../TableBodyRow/RowContext';\n\nimport s from './TableCells.module.scss';\n\nconst CellTitle = ({ title, idx, className='' }) => {\n  const classNames = [s.title, s[title?.action], ...className].join(' ');\n\n  return <div className={classNames}>{title?.name || 'Empty'}</div>;\n};\n\nCellTitle.propTypes = {};\n\nexport default CellTitle;\n","// extracted by mini-css-extract-plugin\nexport default {\"thRow\":\"TableRow_thRow__7wPW3\",\"row\":\"TableRow_row__qSFYZ\",\"selected\":\"TableRow_selected__rTUEn\"};","import React from 'react';\nimport CellTitle from '../TebleCells/CellTitle';\nimport { useTable } from '../TableContext';\nimport s from './TableRow.module.scss';\nconst TableHeadRow = () => {\n  const { tableTitles = [], rowGrid = {} } = useTable();\n\n  const styles = {\n    ...rowGrid,\n  };\n  return (\n    <div style={styles} className={s.thRow}>\n      {tableTitles.map((title, idx) => (\n        <CellTitle key={title.id} title={title} idx={idx} />\n      ))}\n    </div>\n  );\n};\n\nexport default TableHeadRow;\n","import React from 'react';\nimport TableHeadRow from './TableRows/TableHeadRow';\n\nimport s from './TableList.module.scss';\n\nconst TableHead = () => {\n  return (\n    <div className={s.tHead}>\n      <TableHeadRow />\n    </div>\n  );\n};\n\nexport default TableHead;\n","import { useContext, createContext } from 'react';\n\nexport const RowCNTXT = createContext();\nexport const useRow = () => useContext(RowCNTXT);\n\nconst RowContext = ({ children, rowIdx, rowData }) => {\n  return (\n    <RowCNTXT.Provider value={{ rowData, rowIdx }}>\n      <>{children}</>\n    </RowCNTXT.Provider>\n  );\n};\n\nexport default RowContext;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { useRow } from '../TableRows/RowContext';\n\nimport s from './TableCells.module.scss';\n\nconst CellText = ({ title, idx, className = '' }) => {\n  const { rowData } = useRow();\n  const content = rowData[title?.action] || '---';\n  const actionClassName = content !== '---' ? s[title?.action] : s.empty;\n  const classNames = [s.coll, actionClassName, ...className].join(' ');\n\n  return (\n    <div className={classNames} title={content}>\n      <span className={s.cellInner}>{content}</span>\n    </div>\n  );\n};\n\nCellText.propTypes = {};\n\nexport default CellText;\n","import { useTable } from '../TableContext';\nimport CellText from '../TebleCells/CellText';\nimport s from './TableRow.module.scss';\nconst TableRow = () => {\n  const { tableTitles = [], rowGrid = {} } = useTable();\n\n\n  const styles = {\n    ...rowGrid,\n  };\n\n  return (\n    <>\n      <div style={styles} className={s.row}>\n        {tableTitles.map((title, idx) => (\n          <CellText key={title.id} title={title} idx={idx} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default TableRow;\n","import React from 'react';\nimport { useTable } from './TableContext';\nimport RowContext from './TableRows/RowContext';\nimport TableRow from './TableRows/TableRow';\nimport s from './TableList.module.scss';\nconst TableBody = () => {\n  const { visiblePosts = [] } = useTable();\n  return (\n    <div className={s.tBody}>\n      {visiblePosts.map((rowData, idx) => (\n        <RowContext key={rowData.id} rowData={rowData} idx={idx}>\n          <TableRow />\n        </RowContext>\n      ))}\n    </div>\n  );\n};\n\nexport default TableBody;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nimport TableContext from './TableContext';\n\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\n\nimport s from './TableList.module.scss';\n\nconst TableList = props => {\n  return (\n    <TableContext\n      value={{\n        ...props,\n      }}\n    >\n      <div className={[s.table, s.orders]}>\n        <TableHead />\n        <TableBody />\n      </div>\n    </TableContext>\n  );\n};\n\nTableList.propTypes = {};\n\nexport default TableList;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\n// todo date\n// todo string\n// todo orderStatus\n// todo list\n// todo amount\nexport const ordersTableTitles = [\n  {\n    id: nanoid(3),\n    name: 'Дата',\n    dataTitle: 'createdAt',\n    action: 'date',\n    width: 105,\n    filter: false,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Змінено',\n    dataTitle: 'updatedAt',\n    action: 'date',\n    width: 105,\n    filter: false,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Номер',\n    dataTitle: 'orderNumber',\n    action: 'string',\n    width: 120,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Статус',\n    dataTitle: 'orderStatus',\n    action: 'orderStatus',\n    width: 100,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Менеджер',\n    dataTitle: 'managerName',\n    action: 'string',\n    width: 120,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Вартість',\n    dataTitle: 'amount',\n    action: 'amount',\n    width: 80,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Валюта',\n    dataTitle: 'currency',\n    action: 'string',\n    width: 70,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Тип',\n    dataTitle: 'orderType',\n    action: 'orderType',\n    width: 100,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Отримувач',\n    dataTitle: 'recieverName',\n    action: 'string',\n    width: 160,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Замовник',\n    dataTitle: 'customerName',\n    action: 'string',\n    width: 160,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Інвойси',\n    dataTitle: 'invoicesList',\n    action: 'list',\n    width: 170,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'ТТН',\n    dataTitle: 'ttnList',\n    action: 'list',\n    width: 170,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Перевізник',\n    dataTitle: 'transporterName',\n    action: 'string',\n    width: 120,\n    filter: true,\n    visible: true,\n  },\n\n  {\n    id: nanoid(3),\n    name: 'Призначення',\n    dataTitle: 'destination',\n    action: 'string',\n    width: 100,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Склади',\n    dataTitle: 'storeList',\n    action: 'list',\n    width: 150,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Коментар',\n    dataTitle: 'userComment',\n    action: 'string',\n    width: 200,\n    filter: true,\n    visible: true,\n  },\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"pageFlex\":\"PageOrders_pageFlex__SX4hv\",\"sectionTopFlex\":\"PageOrders_sectionTopFlex__wrAG3\",\"sectionBottomFlex\":\"PageOrders_sectionBottomFlex__whXpb\",\"sectionInnerLeft\":\"PageOrders_sectionInnerLeft__+UYv4\",\"sectionInnerRight\":\"PageOrders_sectionInnerRight__SRqI6\"};","// import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Block from 'components/Block/Block';\nimport { PageProvider } from 'contexts/PageContext';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchAllOrders } from 'redux/orders/ordersThunks';\n// import { selectOrders } from 'redux/selectors';\n// import {\n//   actionChangeSearchQuery,\n//   actionChangeSearchParam,\n// } from 'redux/orders/ordersActions';\nimport TableList from 'components/TableList/BlockTable';\n\nimport { ordersTableTitles } from 'data/ordersTableTitles';\n\nimport s from './PageOrders.module.scss';\n\nconst PageOrders = () => {\n  // const { orders } = useSelector(selectOrders);\n\n  // const dispatch = useDispatch();\n  // const blockParams = {\n  //   blockFilter: true,\n  //   blockTable: true,\n  //   pageSelector: selectOrders,\n  // };\n  // const blockFilterParams = {\n  //   tableTitles: ordersTableTitles,\n  //   searchQueryAction: actionChangeSearchQuery,\n  //   searchParamAction: actionChangeSearchParam,\n  // };\n  // const blockTableParams = {\n  //   tableTitles: ordersTableTitles,\n  //   tableData: orders,\n  // };\n\n  // useEffect(() => {\n  //   dispatch(fetchAllOrders());\n  // }, [dispatch]);\n  return (\n    <PageProvider>\n      <div className={s.pageFlex}>\n        <section className={s.sectionTopFlex}>\n          <Block blockFilter title=\"Замовлення\" iconId=\"list\" tableTitles={ordersTableTitles} type=\"filtered\">\n            <TableList />\n          </Block>\n        </section>\n\n        <section className={s.sectionBottomFlex}>\n          <div className={s.sectionInnerLeft}>\n            <Block title=\"Деталі\" iconId=\"info\" type=\"primary\">\n              <span>Order form</span>\n            </Block>\n          </div>\n          <div className={s.sectionInnerRight}>\n            <Block title=\"ТТН\" iconId=\"ttn\" type=\"primary\">\n              <span>Stock table form</span>\n            </Block>\n          </div>\n        </section>\n      </div>\n    </PageProvider>\n  );\n};\n\nPageOrders.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default PageOrders;\n"],"names":["TableCNTXT","createContext","useTable","useContext","children","value","useBlock","tableTitles","useState","selectedAll","setSelectedAll","rowGrid","display","gridTemplateColumns","length","Provider","ts","title","idx","className","classNames","s","action","join","name","styles","style","map","id","RowCNTXT","rowIdx","rowData","content","actionClassName","visiblePosts","props","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","ordersTableTitles","dataTitle","width","filter","visible","Block","blockFilter","iconId","type"],"sourceRoot":""}