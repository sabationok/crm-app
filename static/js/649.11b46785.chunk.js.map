{"version":3,"file":"static/js/649.11b46785.chunk.js","mappings":"mPAyDA,UA9CqB,SAAC,GAAqC,IAAD,IAAlCA,KAAAA,OAAkC,MAA3B,WAA2B,EAClDC,IADkD,aACvCC,EAAAA,EAAAA,OACTC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAOC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAYJ,IAE/BK,EAAsBC,EAAAA,GAAAA,MAAoB,SAAAC,GAAE,OAAIA,EAAGC,OAASC,EAAAA,GAAAA,gBAAhB,IAC5CC,EAAuBJ,EAAAA,GAAAA,MAAoB,SAAAC,GAAE,OAAIA,EAAGC,OAASC,EAAAA,GAAAA,iBAAhB,IAC7CE,EAAuBL,EAAAA,GAAAA,MAAoB,SAAAC,GAAE,OAAIA,EAAGC,OAASC,EAAAA,GAAAA,iBAAhB,IAE7CG,EAAY,CAChBC,UAAU,SAAC,MAAD,UAAuBH,IACjCI,SAAS,SAAC,MAAD,UAAsBT,IAC/BU,OAAO,SAAC,MAAD,UAAuBJ,MAGhCK,EAAAA,EAAAA,YAAU,WAGR,OAFAlB,GAASmB,EAAAA,EAAAA,KAAwB,IAE1B,WACLnB,GAASmB,EAAAA,EAAAA,KAAwB,GAClC,CACF,GAAE,CAACnB,IAEJ,IAAMoB,EAAM,CACVrB,KAAAA,EACAK,KAAAA,GAGF,OACE,+BACE,UAAC,MAAD,kBAAkBgB,GAAlB,eACE,UAAC,KAAD,YACE,SAAC,MAAD,UAAuBR,KACvB,SAAC,MAAD,UAAsBL,KACtB,SAAC,MAAD,UAAuBM,QAEzB,SAAC,KAAD,UAAcd,EAAOe,EAAUf,GAAQe,EAAUO,aAIxD,C","sources":["components/AppPages/PageProducts.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport PageProvider from './PageProvider';\nimport { MinTabletXl, MaxToTablet } from 'components/DeviceTypeInformer/DeviceTypeController';\nimport { BlockProductsList, BlockProductInfo, BlockProductStock } from 'components/Blocks/BlocksMap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actionSetPageGridChange } from 'redux/page/pageActions';\nimport { blocksSettings, blocksNames } from 'data';\nimport { useParams } from 'react-router-dom';\nimport { getPostById } from 'redux/selectors';\n\nconst PageProducts = ({ path = 'products', ...props }) => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const post = useSelector(getPostById(id));\n\n  const BlockProductInfoSet = blocksSettings.find(el => el.name === blocksNames.BlockProductInfo);\n  const BlockProductsListSet = blocksSettings.find(el => el.name === blocksNames.BlockProductsList);\n  const BlockProductStockSet = blocksSettings.find(el => el.name === blocksNames.BlockProductStock);\n\n  const blocksMap = {\n    products: <BlockProductsList {...BlockProductsListSet} />,\n    product: <BlockProductInfo {...BlockProductInfoSet} />,\n    stock: <BlockProductStock {...BlockProductStockSet} />,\n  };\n\n  useEffect(() => {\n    dispatch(actionSetPageGridChange(true));\n\n    return () => {\n      dispatch(actionSetPageGridChange(false));\n    };\n  }, [dispatch]);\n\n  const ctx = {\n    path,\n    post,\n  };\n\n  return (\n    <>\n      <PageProvider {...ctx}>\n        <MinTabletXl>\n          <BlockProductsList {...BlockProductsListSet} />\n          <BlockProductInfo {...BlockProductInfoSet} />\n          <BlockProductStock {...BlockProductStockSet} />\n        </MinTabletXl>\n        <MaxToTablet>{path ? blocksMap[path] : blocksMap.admin}</MaxToTablet>\n      </PageProvider>\n    </>\n  );\n};\n\nPageProducts.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default PageProducts;\n"],"names":["path","dispatch","useDispatch","id","useParams","post","useSelector","getPostById","BlockProductInfoSet","blocksSettings","el","name","blocksNames","BlockProductsListSet","BlockProductStockSet","blocksMap","products","product","stock","useEffect","actionSetPageGridChange","ctx","admin"],"sourceRoot":""}