{"version":3,"file":"static/js/155.09b5420a.chunk.js","mappings":"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","sources":["webpack://crm-app/./src/components/Block/BlockHeaderSearch/BlockSearch/BlockSearch.module.scss?8eb8","components/Block/BlockHeaderSearch/BlockSearch/BlockSearch.jsx","components/Block/BlockUtils/founder.js","webpack://crm-app/./src/components/Block/BlockHeaderSearch/BlockHeaderSearch.module.scss?d3eb","components/Block/BlockHeaderSearch/BlockHeaderSearch.jsx","webpack://crm-app/./src/components/Block/BlockHeader/BlockHeader.module.scss?dd97","components/Block/BlockHeader/BlockHeader.jsx","webpack://crm-app/./src/components/Block/Block.module.scss?034c","components/Block/Block.jsx","components/Block/BlockPortal.jsx","webpack://crm-app/./src/components/Block/BlockActions/ActionsList/Actions/Action.module.scss?7706","components/Block/BlockActions/ActionsList/Actions/ActionPrimary.jsx","components/Block/BlockActions/ActionsList/Actions/ActionCopy.jsx","components/Block/BlockActions/ActionsList/Actions/ActionShare.jsx","components/Block/BlockActions/ActionsList/Actions/ActionPrint.jsx","components/Block/BlockActions/ActionsList/Actions/ActionExport.jsx","components/Block/BlockActions/ActionsList/Actions/ActionImport.jsx","components/Block/BlockActions/ActionsList/Actions/ActionFilter.jsx","components/Block/BlockActions/ActionsList/Actions/ActionLink.jsx","components/Block/BlockActions/ActionsList/Actions/ActionSearch.jsx","components/Block/BlockActions/ActionsList/Actions/ActionEdit.jsx","components/Block/BlockActions/ActionsList/Actions/ActionCreate.jsx","components/Block/BlockActions/ActionsList/Actions/ActionDelete.jsx","components/Block/BlockActions/ActionsList/Actions/ActionRefresh.jsx","webpack://crm-app/./src/components/Block/BlockActions/ActionsList/ActionsList.module.scss?4388","components/Block/BlockActions/ActionsList/ActionsList.jsx","webpack://crm-app/./src/components/Block/BlockActions/BlockActions.module.scss?4049","components/Block/BlockActions/BlockActions.jsx","components/Block/blockActions.js","components/Block/BlockContext.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"BlockSearch_filterContainer__Nu+uf\",\"filterForm\":\"BlockSearch_filterForm__iPIpw\",\"customFounder\":\"BlockSearch_customFounder__WBHkw\",\"inputFounder\":\"BlockSearch_inputFounder__o55Bv\",\"customSelect\":\"BlockSearch_customSelect__rAeb1\",\"isOpen\":\"BlockSearch_isOpen__9lhaC\",\"selectList\":\"BlockSearch_selectList__j6QIs\",\"inputParam\":\"BlockSearch_inputParam__anOuU\",\"selectItem\":\"BlockSearch_selectItem__5pGfS\",\"button\":\"BlockSearch_button__VOCQW\",\"notification\":\"BlockSearch_notification__tXPeC\"};","import React, { useState, useEffect } from 'react';\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\n// import { useDispatch } from 'react-redux';\nimport { applyFounder } from '../../BlockUtils/founder';\nimport { useBlock } from 'components/Block/BlockContext';\nimport { toast } from 'react-toastify';\n\nimport scss from './BlockSearch.module.scss';\n\nconst BlockSearch = props => {\n  const { tableTitles = [] } = useBlock();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParam, setSearchParam] = useState({ name: '' });\n  const [isSelectOpen, seIsSelectOpen] = useState(false);\n  const [foundedData, setFoundedData] = useState([]);\n  // const dispatch = useDispatch();\n\n  const classOpen = [scss.customSelect, isSelectOpen && scss.isOpen].join(' ');\n\n  function onInputChange(evt) {\n    let { target } = evt;\n    setSearchQuery(target.value);\n  }\n  function handleFormSubmit(evt) {\n    evt.preventDefault();\n    if (searchQuery && searchParam.name) {\n      toast.info(`Ви шукали: '${searchQuery}' серед '${searchParam.name}'`);\n      return;\n    }\n    toast.error(`Не введено усіх параметрів пошуку`);\n    // dispatch(searchQueryAction(searchQuery.trim()));\n    // dispatch(searchParamAction(searchParam));\n  }\n  function handleToggleOpenSelect() {\n    seIsSelectOpen(!isSelectOpen);\n  }\n  function onSearchParamClick({ evt, item }) {\n    setSearchParam(item);\n    handleToggleOpenSelect();\n  }\n  function handleChangeSearchParamInput(evt) {\n    let { target } = evt;\n    setSearchParam({ ...searchParam, name: target.value });\n  }\n  useEffect(() => {\n    if (tableTitles.length === 0) {\n      return;\n    }\n    setFoundedData(\n      applyFounder({\n        searchParam: 'name',\n        searchQuery: searchParam.name,\n        data: tableTitles.filter(el => el?.filter && el?.visible),\n      })\n    );\n  }, [searchParam, tableTitles]);\n\n  useEffect(() => {\n    if (!searchQuery === '') {\n      // dispatch(searchQueryAction(''));\n      console.log(searchQuery);\n    }\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (!searchParam.name === '') {\n      console.log(searchParam.name);\n      // dispatch(searchParamAction(''));\n    }\n  }, [searchParam]);\n  return (\n    <div className={scss.filterContainer}>\n      <form\n        className={scss.filterForm}\n        onSubmit={evt => {\n          handleFormSubmit(evt);\n        }}\n      >\n        <div className={classOpen} onClick={handleToggleOpenSelect}>\n          <input\n            className={scss.inputParam}\n            type=\"text\"\n            placeholder=\"Параметр\"\n            value={searchParam.name}\n            onChange={handleChangeSearchParamInput}\n          />\n          <ul className={scss.selectList}>\n            {foundedData.map(item => (\n              <li\n                key={item.id}\n                className={scss.selectItem}\n                data-title={item.dataTitle}\n                onClick={evt => {\n                  onSearchParamClick({ evt, item });\n                }}\n              >\n                {item.name}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className={scss.customFounder}>\n          <input\n            className={scss.inputFounder}\n            type=\"text\"\n            name=\"searchQuery\"\n            value={searchQuery}\n            placeholder=\"Пошук\"\n            onChange={evt => {\n              onInputChange(evt);\n            }}\n          />\n        </div>\n\n        <button className={scss.button} type=\"submit\">\n          <SvgIcon iconId=\"search\" size=\"24px\" />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nBlockSearch.propTypes = {};\n\nexport default BlockSearch;\n","export function applyFounder({\n  searchParam = '',\n  searchQuery = null,\n  data = [],\n}) {\n  return data.filter(el => {\n    if (typeof el[searchParam] === 'number') {\n      return !(\n        searchQuery &&\n        !el[searchParam]\n          .toString()\n          .toLowerCase()\n          .includes(searchQuery.toLowerCase())\n      );\n    }\n    if (typeof el[searchParam] === 'string') {\n      return !(\n        searchQuery &&\n        !el[searchParam].toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    return true\n    // return !(\n    //   searchQuery &&\n    //   !el[searchParam].toLowerCase().includes(searchQuery.toLowerCase())\n    // );\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"BlockHeaderSearch_header__fq2h1\",\"headerWithSearch\":\"BlockHeaderSearch_headerWithSearch__Vnm1m\",\"blockLink\":\"BlockHeaderSearch_blockLink__on8iA\",\"link\":\"BlockHeaderSearch_link__AvW2Q\",\"title\":\"BlockHeaderSearch_title__yFzIH\"};","import React from 'react';\n\nimport BlockSearch from './BlockSearch/BlockSearch';\nimport BlockActions from '../BlockActions/BlockActions';\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\nimport { useBlock } from '../BlockContext';\n\nimport s from './BlockHeaderSearch.module.scss';\n\nconst BlockHeaderSearch = () => {\n  const { title = 'Title', iconId = 'info', isSearch } = useBlock();\n  const headerClassName = !isSearch ? s.header : s.headerWithSearch;\n\n  return (\n    <div className={headerClassName}>\n      <SvgIcon iconId={iconId} size={'24px'} />\n\n      {isSearch && <BlockSearch />}\n\n      {title && (\n        <span className={s.title}>\n          <span title={title}>{title}</span>\n        </span>\n      )}\n\n      <BlockActions />\n    </div>\n  );\n};\n\nexport default BlockHeaderSearch;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"BlockHeader_header__qK20U\",\"headerLink\":\"BlockHeader_headerLink__dXusF\",\"subTitle\":\"BlockHeader_subTitle__7D1CL\",\"titleInner\":\"BlockHeader_titleInner__qnGM0\",\"title\":\"BlockHeader_title__FuYVP\"};","import React from 'react';\nimport { lazy } from 'react';\n\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\nimport { useBlock } from '../BlockContext';\n\nimport s from './BlockHeader.module.scss';\n\nconst BlockActions = lazy(() => import('../BlockActions/BlockActions'));\n\nconst BlockHeader = () => {\n  const { title = 'Title', iconId = 'info' } = useBlock();\n  return (\n    <div className={s.header}>\n      <SvgIcon iconId={iconId} size={'24px'} />\n\n      <span className={s.title}>\n        <span className={s.titleInner} title={title}>\n          {title}\n        </span>\n      </span>\n\n      <BlockActions />\n    </div>\n  );\n};\n\nexport default BlockHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"Block_block__l4rYQ\",\"blockDark\":\"Block_blockDark__wuUze\",\"title\":\"Block_title__Fgg31\",\"overflow\":\"Block_overflow__I1+3b\",\"content\":\"Block_content__VVaX5\",\"footer\":\"Block_footer__0j8tQ\",\"inWork\":\"Block_inWork__m6rkC\"};","import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport BlockContext from './BlockContext';\nimport BlockHeaderSearch from './BlockHeaderSearch/BlockHeaderSearch';\nimport BlockHeader from './BlockHeader/BlockHeader';\n\nimport { useSelector } from 'react-redux';\nimport { getAppSettings } from 'redux/selectors';\n\nimport s from './Block.module.scss';\n\nconst Block = props => {\n  let {\n    children,\n    title = 'Title',\n    iconId = 'info',\n    footer = true,\n    header = true,\n    style = {},\n    className = '',\n    filter = false,\n  } = props;\n  const { isDarkTheme } = useSelector(getAppSettings);\n  const blockClassName = [isDarkTheme ? s.blockDark : s.block, className].join(' ');\n  const [isSearch, setIsSearch] = useState(false);\n  const [isFormDisabled, setIsFormDisabled] = useState(true);\n\n  function handleToggleBlockSearch() {\n    setIsSearch(!isSearch);\n  }\n  function handleToggleEditForm() {\n    setIsFormDisabled(!isFormDisabled);\n  }\n\n  const state = {\n    isSearch,\n    isFormDisabled,\n  };\n  const stateHandlers = {\n    handleToggleBlockSearch,\n    handleToggleEditForm,\n  };\n\n  console.log(`block '${title}'inicialize`);\n\n  return (\n    <>\n      <BlockContext {...props} {...stateHandlers} {...state}>\n        <div className={blockClassName} style={style}>\n          {header && (\n            <>\n              {filter && <BlockHeaderSearch />}\n              {!filter && <BlockHeader />}\n            </>\n          )}\n\n          <div className={s.content} id={iconId}>\n            <div className={s.overflow}>\n              {children}\n\n              {!children && (\n                <div className={s.inWork}>\n                  <span>In work ...</span>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {footer && <div className={s.footer}></div>}\n        </div>\n      </BlockContext>\n    </>\n  );\n};\n\nBlock.propTypes = {};\n\nexport default Block;\n","import ReactDOM from 'react-dom';\nimport { useState, useEffect } from 'react';\n\nconst BlockPortal = props => {\n  const [isPortalOpen, setIsPortalOpen] = useState(false);\n  const blockRef = document.getElementById(props.id);\n\n  useEffect(() => {\n    if (props.id) {\n      setIsPortalOpen(true);\n      return;\n    }\n    setIsPortalOpen(false);\n  }, [props.id]);\n  if (!isPortalOpen) {\n    return;\n  }\n  return ReactDOM.createPortal(props.children, blockRef);\n};\n\nBlockPortal.propTypes = {};\n\nexport default BlockPortal;\n","// extracted by mini-css-extract-plugin\nexport default {\"actionActive\":\"Action_actionActive__8Wn-y\",\"actionNotActive\":\"Action_actionNotActive__0nksk\",\"listItem\":\"Action_listItem__JziyT\",\"actionTitle\":\"Action_actionTitle__YTAVc\"};","import React from 'react';\nimport ButtonIcon from 'components/ButtonIcon/ButtonIcon';\n\nimport s from './Action.module.scss';\n\nconst ActionPrimary = ({ name, status = false, iconId = 'close', title = 'title', onClick }) => {\n  const actionClass = status ? s.actionActive : s.actionNotActive;\n\n  return (\n    <>\n      <li className={s.listItem}>\n        <ButtonIcon\n          iconId={iconId}\n          size=\"100%\"\n          iconSize=\"28px\"\n          className={actionClass}\n          onClick={onClick}\n          disabled={!status}\n        />\n        <span className={s.actionTitle}>{title}</span>\n      </li>\n    </>\n  );\n};\n\nexport default ActionPrimary;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\nimport { toast } from 'react-toastify';\nimport { useBlock } from 'components/Block/BlockContext';\n\nconst ActionCopy = ({ action }) => {\n  const { blockTitle } = useBlock();\n\n  function handleCopyBtnClick() {\n    navigator.clipboard.writeText(blockTitle);\n    toast.info(`Створено копію \"${blockTitle}\"`);\n  }\n  return <ActionPrimary {...action} onClick={handleCopyBtnClick} />;\n};\n\nexport default ActionCopy;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\n\nimport { toast } from 'react-toastify';\nimport { useBlock } from 'components/Block/BlockContext';\n\nconst ActionShare = ({ action }) => {\n  const { title } = useBlock();\n  let LINK = `${window.location}/${title}`;\n\n  async function handleShareBtnClick() {\n    const shareData = {\n      title: `Поділитись назвою блоку ${title}`,\n      text: `Поділитись назвою блоку ${title}`,\n      url: LINK,\n    };\n    try {\n      navigator.share(shareData);\n      toast.success(`Назва блоку для надсилання ${title}`);\n    } catch (err) {\n      toast.error(`Error: ${err}`);\n    }\n  }\n\n  return <ActionPrimary {...action} onClick={handleShareBtnClick} />;\n};\n\nexport default ActionShare;\n","import React from 'react';\n\nimport ActionPrimary from './ActionPrimary';\n\nconst ActionPrint = ({ action }) => {\n  return (\n    <>\n      <ActionPrimary {...action} />\n    </>\n  );\n};\n\nexport default ActionPrint;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\n\nconst ActionExport = ({ action }) => {\n\n  return <ActionPrimary {...action} />;\n};\n\nexport default ActionExport;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\n\nconst ActionImport = ({ action }) => {\n  return <ActionPrimary {...action} />;\n};\n\nexport default ActionImport;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\n\nconst ActionFilter = ({ action }) => {\n\n  return <ActionPrimary {...action} />;\n};\n\nexport default ActionFilter;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\nimport { toast } from 'react-toastify';\nimport { useBlock } from 'components/Block/BlockContext';\n\nconst ActionLink = ({ action }) => {\n  const { title, appNotify } = useBlock();\n  let LINK = `${window.location}/${title}`;\n\n  function handleCopyBtnClick() {\n    navigator.clipboard.writeText(LINK);\n    toast.info(`Посилання на товар скопійоване \"${title}\"`);\n    appNotify.info({ title: 'Посилання скопйоване', text: `\"${LINK}\"` });\n  }\n  return <ActionPrimary {...action} onClick={handleCopyBtnClick} />;\n};\n\nexport default ActionLink;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\nimport { useBlock } from 'components/Block/BlockContext';\n\nconst ActionSearch = ({ action }) => {\n  const { handleToggleBlockSearch } = useBlock();\n  return <ActionPrimary {...action} onClick={handleToggleBlockSearch} />;\n};\n\nexport default ActionSearch;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\nimport { useBlock } from 'components/Block/BlockContext';\n\nconst ActionEdit = ({ action }) => {\n  const { handleToggleEditForm } = useBlock();\n\n  return <ActionPrimary {...action} onClick={handleToggleEditForm} />;\n};\n\nexport default ActionEdit;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\n\nconst ActionCreate = ({ action }) => {\n\n  return <ActionPrimary {...action} />;\n};\n\nexport default ActionCreate;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\n\nconst ActionDelete = ({ action }) => {\n\n  return <ActionPrimary {...action} />;\n};\n\nexport default ActionDelete;\n","import React from 'react';\nimport ActionPrimary from './ActionPrimary';\n\nconst ActionRefresh = ({ action }) => {\n\n  return <ActionPrimary {...action} />;\n};\n\nexport default ActionRefresh;\n","// extracted by mini-css-extract-plugin\nexport default {\"actionsList\":\"ActionsList_actionsList__6ChT6\"};","import React from 'react';\n\nimport ActionCopy from './Actions/ActionCopy';\nimport ActionShare from './Actions/ActionShare';\nimport ActionPrint from './Actions/ActionPrint';\nimport ActionExport from './Actions/ActionExport';\nimport ActionImport from './Actions/ActionImport';\nimport ActionFilter from './Actions/ActionFilter';\nimport ActionLink from './Actions/ActionLink';\nimport ActionSearch from './Actions/ActionSearch';\nimport ActionEdit from './Actions/ActionEdit';\nimport ActionCreate from './Actions/ActionCreate';\nimport ActionDelete from './Actions/ActionDelete';\nimport ActionRefresh from './Actions/ActionRefresh';\nimport ActionPrimary from './Actions/ActionPrimary';\n\nimport s from './ActionsList.module.scss';\n\nconst BlockActionsList = ({ arr = [] }) => {\n  const actionsMap = {\n    link: ActionLink,\n    search: ActionSearch,\n    filter: ActionFilter,\n    copy: ActionCopy,\n    share: ActionShare,\n    print: ActionPrint,\n    export: ActionExport,\n    import: ActionImport,\n    edit: ActionEdit,\n    delete: ActionDelete,\n    create: ActionCreate,\n    refresh: ActionRefresh,\n  };\n  let Action = <></>;\n  return (\n    <ul className={s.actionsList}>\n      {arr.map(action => {\n        if (action.name) {\n          Action = actionsMap[action.name];\n\n          return <Action key={action.name} action={action} {...action} />;\n        }\n        return <ActionPrimary key={action.name} {...action} />;\n      })}\n    </ul>\n  );\n};\n\nexport default BlockActionsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"actionsBackdrop\":\"BlockActions_actionsBackdrop__QWF-u\",\"actionsBackdropOpen\":\"BlockActions_actionsBackdropOpen__PvLbA\",\"actionsContainer\":\"BlockActions_actionsContainer__Pbrz5\"};","import React, { useState, useMemo, useEffect } from 'react';\nimport ButtonIcon from 'components/ButtonIcon/ButtonIcon';\nimport BlockPortal from '../BlockPortal';\nimport BlockActionsList from './ActionsList/ActionsList';\n\nimport { useBlock } from '../BlockContext';\n\nimport s from './BlockActions.module.scss';\n\nconst BlockActions = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const block = useBlock();\n\n  const memoizedActionsArr = useMemo(() => {\n    switch (block.actions) {\n      case 'primary':\n        return block.actionsPrimary;\n\n      case 'withFilter':\n        return block.actionsWithFilter;\n\n      default:\n        return [];\n    }\n  }, [block.actions, block.actionsPrimary, block.actionsWithFilter]);\n\n  function handleOpenActions(evt) {\n    setIsOpen(!isOpen);\n  }\n\n  useEffect(() => {\n    function handleCloseActionsByEscape(ev) {\n      let { code } = ev;\n      if (code === 'Escape') {\n        setIsOpen(false);\n        window.removeEventListener('keydown', handleCloseActionsByEscape);\n        return;\n      }\n      return;\n    }\n    if (!isOpen) {\n      window.removeEventListener('keydown', handleCloseActionsByEscape);\n      return;\n    } else if (isOpen) {\n      window.addEventListener('keydown', handleCloseActionsByEscape);\n      return;\n    }\n  }, [isOpen]);\n\n  return (\n    <>\n      <ButtonIcon iconId={isOpen ? 'close' : 'actions-h'} size=\"100%\" iconSize=\"24px\" onClick={handleOpenActions} />\n      <BlockPortal id={block.iconId}>\n        <div className={isOpen ? s.actionsBackdropOpen : s.actionsBackdrop} onClick={handleOpenActions}>\n          {isOpen && (\n            <div className={s.actionsContainer}>\n              <span className={s.actionsTitle}>{`Додаткові дії блоку \"${block.title}\"`}</span>\n              {memoizedActionsArr.length > 0 && <BlockActionsList arr={memoizedActionsArr} />}\n            </div>\n          )}\n        </div>\n      </BlockPortal>\n    </>\n  );\n};\n\nexport default BlockActions;\n","const actionsPrimary = [\n  { name: 'link', title: 'Посилання', iconId: 'link', status: true },\n  { name: 'copy', title: 'Копіювати', iconId: 'copy', status: false },\n  { name: 'share', title: 'Поділитись', iconId: 'share', status: true },\n  { name: 'refresh', title: 'Оновити', iconId: 'refresh', status: false },\n  { name: 'edit', title: 'Редагувати', iconId: 'edit', status: true },\n  { name: 'delete', title: 'Видалити', iconId: 'delete', status: false },\n  { name: 'create', title: 'Створити', iconId: 'plus', status: false },\n  { name: 'print', title: 'Друк', iconId: 'print', status: false },\n  { name: 'export', title: 'Експорт', iconId: 'upload', status: false },\n  { name: 'import', title: 'Імпорт', iconId: 'download', status: false },\n];\nconst actionsWithFilter = [\n  { name: 'search', title: 'Пошук', iconId: 'search', status: true },\n  { name: 'filter', title: 'Фільтр', iconId: 'filter-off', status: false },\n  { name: 'link', title: 'Посилання', iconId: 'link', status: true },\n  { name: 'copy', title: 'Копіювати', iconId: 'copy', status: false },\n  { name: 'share', title: 'Поділитись', iconId: 'share', status: true },\n  { name: 'refresh', title: 'Оновити', iconId: 'refresh', status: false },\n  { name: 'edit', title: 'Редагувати', iconId: 'edit', status: false },\n  { name: 'delete', title: 'Видалити', iconId: 'delete', status: false },\n  { name: 'create', title: 'Створити', iconId: 'plus', status: false },\n  { name: 'print', title: 'Друк', iconId: 'print', status: false },\n  { name: 'export', title: 'Експорт', iconId: 'upload', status: false },\n  { name: 'import', title: 'Імпорт', iconId: 'download', status: false },\n];\nconst blockActions = { actionsPrimary, actionsWithFilter };\nexport default blockActions;\n","import { useContext, createContext } from 'react';\nimport blockActions from './blockActions';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { actionAddNotify } from 'redux/notifications/notificationsActions';\n\nexport const BlockProvider = createContext();\nexport const useBlock = () => useContext(BlockProvider);\n\nconst BlockContext = props => {\n  const dispatch = useDispatch();\n\n  function dispatchAddNotify({ title, type, text }) {\n    dispatch(\n      actionAddNotify({\n        id: nanoid(5),\n        type: type,\n        title: title,\n        text: text,\n        createdAt: new Date(),\n      })\n    );\n  }\n\n  const appNotify = {\n    success: ({ title, text }) => {\n      dispatchAddNotify({ title, text, type: 'success' });\n    },\n    info: ({ title, text }) => {\n      dispatchAddNotify({ title, text, type: 'info' });\n    },\n    error: ({ title, text }) => {\n      dispatchAddNotify({ title, text, type: 'error' });\n    },\n    warning: ({ title, text }) => {\n      dispatchAddNotify({ title, text, type: 'warning' });\n    },\n    primary: ({ title, text }) => {\n      dispatchAddNotify({ title, text, type: 'primary' });\n    },\n  };\n  return (\n    <BlockProvider.Provider value={{ ...props, ...blockActions, appNotify }}>{props.children}</BlockProvider.Provider>\n  );\n};\n\nexport default BlockContext;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["props","useBlock","tableTitles","useState","searchQuery","setSearchQuery","name","searchParam","setSearchParam","isSelectOpen","seIsSelectOpen","foundedData","setFoundedData","classOpen","scss","join","handleToggleOpenSelect","useEffect","length","data","filter","el","toString","toLowerCase","includes","applyFounder","visible","console","log","className","onSubmit","evt","preventDefault","toast","handleFormSubmit","onClick","type","placeholder","value","onChange","target","map","item","dataTitle","onSearchParamClick","id","onInputChange","SvgIcon","iconId","size","title","isSearch","headerClassName","s","BlockActions","lazy","children","footer","header","style","blockClassName","useSelector","getAppSettings","isDarkTheme","setIsSearch","isFormDisabled","setIsFormDisabled","state","stateHandlers","handleToggleBlockSearch","handleToggleEditForm","BlockContext","BlockPortal","isPortalOpen","setIsPortalOpen","blockRef","document","getElementById","ReactDOM","propTypes","status","actionClass","ButtonIcon","iconSize","disabled","action","blockTitle","navigator","clipboard","writeText","LINK","window","location","shareData","text","url","share","err","appNotify","info","arr","actionsMap","link","ActionLink","search","ActionSearch","ActionFilter","copy","ActionCopy","ActionShare","print","ActionPrint","export","ActionExport","import","ActionImport","edit","ActionEdit","delete","ActionDelete","create","ActionCreate","refresh","ActionRefresh","Action","isOpen","setIsOpen","block","memoizedActionsArr","useMemo","actions","actionsPrimary","actionsWithFilter","handleOpenActions","handleCloseActionsByEscape","ev","code","removeEventListener","addEventListener","BlockProvider","createContext","useContext","dispatch","useDispatch","dispatchAddNotify","actionAddNotify","nanoid","createdAt","Date","success","error","warning","primary","Provider","blockActions","crypto","getRandomValues","Uint8Array","reduce","byte","toUpperCase"],"sourceRoot":""}