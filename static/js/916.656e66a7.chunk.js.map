{"version":3,"file":"static/js/916.656e66a7.chunk.js","mappings":"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","sources":["webpack://crm-app/./src/components/Forms/FormPrimary/FormPrimary.module.scss?e3c8","components/Forms/FormPrimary/FormPrimary.jsx","webpack://crm-app/./src/components/TableList/TableList.module.scss?3cbc","components/TableList/TableContext.jsx","webpack://crm-app/./src/components/TableList/TebleCells/TableCells.module.scss?4c72","components/TableList/TebleCells/CellTitle.jsx","webpack://crm-app/./src/components/TableList/TableRows/TableRow.module.scss?64c3","components/TableList/TableRows/TableHeadRow.jsx","components/TableList/TableHead.jsx","components/TableList/TableRows/RowContext.jsx","components/TableList/TebleCells/CellText.jsx","components/TableList/TableRows/TableRow.jsx","components/TableList/TableBody.jsx","components/TableList/BlockTable.jsx","../node_modules/nanoid/index.browser.js","data/ordersTableTitles.js","webpack://crm-app/./src/components/Pages/PageOrders/PageOrders.module.scss?d515","components/Pages/PageOrders/PageOrders.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"FormPrimary_formContainer__riZjX\",\"form\":\"FormPrimary_form__Wceed\",\"notActiveForm\":\"FormPrimary_notActiveForm__CyDb9\",\"formTitle\":\"FormPrimary_formTitle__c4iOn\",\"inputs\":\"FormPrimary_inputs__J0qx4\",\"buttons\":\"FormPrimary_buttons__BjbgB\",\"btnName\":\"FormPrimary_btnName__KExEs\"};","import React from 'react';\nimport { useBlock } from 'components/Block/BlockContext';\nimport ButtonIcon from 'components/ButtonIcon/ButtonIcon';\n\nimport s from './FormPrimary.module.scss';\nconst FormPrimary = ({ children, onSubmit, onReset, formTitle = 'Form title' }) => {\n  const { isFormDisabled } = useBlock();\n  return (\n    <div className={s.formContainer}>\n      <form className={!isFormDisabled ? s.form : s.notActiveForm} onSubmit={onSubmit} onReset={onReset}>\n        <div className={s.formTitle}>\n          <span>{formTitle}</span>\n        </div>\n        {children ?? <div className={s.inputs}></div>}\n        <span>Далі буде ...</span>\n        <div className={s.buttons}>\n          <ButtonIcon\n            iconId=\"doneAll\"\n            styleType=\"AcceptBtn\"\n            type=\"submit\"\n            styles={{ width: 'fit-content', minHeight: 'fit-content' }}\n            iconSize=\"26px\"\n          >\n            <span className={s.btnName}>Прийняти</span>\n          </ButtonIcon>\n          <ButtonIcon\n            iconId=\"clear\"\n            styleType=\"ResetBtn\"\n            type=\"reset\"\n            styles={{ width: 'fit-content', minHeight: 'fit-content' }}\n            iconSize=\"26px\"\n          >\n            <span className={s.btnName}>Очистити</span>\n          </ButtonIcon>\n          <ButtonIcon\n            iconId=\"removeDone\"\n            styleType=\"DeclineBtn\"\n            styles={{ width: 'fit-content', minHeight: 'fit-content' }}\n            iconSize=\"26px\"\n          >\n            <span className={s.btnName}>Відхилити</span>\n          </ButtonIcon>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default FormPrimary;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"TableList_table__ngc4N\",\"tHead\":\"TableList_tHead__W19Yb\",\"tBody\":\"TableList_tBody__qz-DX\"};","import { useContext, createContext, useState } from 'react';\n// import cloneDeep from 'lodash.clonedeep';\n// import { useSelector } from 'react-redux';\n// import { selectPosts } from 'redux/selectors';\n// import { applyFounder } from 'components/BlockWithList/BlockUtils/founder';\nimport { useBlock } from 'components/Block/BlockContext';\nimport ts from './TableList.module.scss';\n\nexport const TableCNTXT = createContext();\nexport const useTable = () => useContext(TableCNTXT);\n\nconst TableContext = ({ children, value }) => {\n  const { tableTitles = [] } = useBlock();\n  // const { searchQuery, searchParam } = useSelector(selectPosts);\n  const [selectedAll, setSelectedAll] = useState(false);\n  // const [tableDataCloned, setTableDateCloned] = useState([]);\n  // const [foundedPosts, setFoundedPosts] = useState([]);\n  const rowGrid = {\n    display: 'grid',\n    // gridTemplateColumns: `repeat(${tableTitles.length}, max-content)`,\n    gridTemplateColumns: `repeat(${tableTitles.length}, 100px)`,\n  };\n\n  // useEffect(() => {\n  //   if (tableData.length !== 0) {\n  //     setTableDateCloned(cloneDeep(tableData));\n  //     return;\n  //   }\n  // }, [tableData]);\n\n  // useEffect(() => {\n  //   setFoundedPosts(\n  //     applyFounder({\n  //       searchParam: searchParam,\n  //       searchQuery: searchQuery,\n  //       data: tableDataCloned,\n  //     })\n  //   );\n  // }, [searchParam, searchQuery, tableDataCloned]);\n\n  return (\n    <TableCNTXT.Provider\n      value={{\n        ts,\n        ...value,\n        rowGrid,\n        tableTitles: tableTitles,\n        setSelectedAll: setSelectedAll,\n        selectedAll: selectedAll,\n        // visiblePosts: foundedPosts,\n      }}\n    >\n      {children}\n    </TableCNTXT.Provider>\n  );\n};\n\nexport default TableContext;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"TableCells_title__uc2M1\",\"coll\":\"TableCells_coll__jUPDv\",\"selected\":\"TableCells_selected__cfxa2\",\"cellInner\":\"TableCells_cellInner__Qolij\",\"cellInnerWrap\":\"TableCells_cellInnerWrap__EeyM8\",\"empty\":\"TableCells_empty__bku02\",\"price\":\"TableCells_price__jtWWE\",\"currency\":\"TableCells_currency__bTTZf\",\"commision\":\"TableCells_commision__V8R+W\",\"stock\":\"TableCells_stock__iPkCd\",\"productionTime\":\"TableCells_productionTime__9+mZc\"};","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { useRow } from '../TableBodyRow/RowContext';\n\nimport s from './TableCells.module.scss';\n\nconst CellTitle = ({ title, idx, className='' }) => {\n  const classNames = [s.title, s[title?.action], ...className].join(' ');\n\n  return <div className={classNames}>{title?.name || 'Empty'}</div>;\n};\n\nCellTitle.propTypes = {};\n\nexport default CellTitle;\n","// extracted by mini-css-extract-plugin\nexport default {\"thRow\":\"TableRow_thRow__7wPW3\",\"row\":\"TableRow_row__qSFYZ\",\"selected\":\"TableRow_selected__rTUEn\"};","import React from 'react';\nimport CellTitle from '../TebleCells/CellTitle';\nimport { useTable } from '../TableContext';\nimport s from './TableRow.module.scss';\nconst TableHeadRow = () => {\n  const { tableTitles = [], rowGrid = {} } = useTable();\n\n  const styles = {\n    ...rowGrid,\n  };\n  return (\n    <div style={styles} className={s.thRow}>\n      {tableTitles.map((title, idx) => (\n        <CellTitle key={title.id} title={title} idx={idx} />\n      ))}\n    </div>\n  );\n};\n\nexport default TableHeadRow;\n","import React from 'react';\nimport TableHeadRow from './TableRows/TableHeadRow';\n\nimport s from './TableList.module.scss';\n\nconst TableHead = () => {\n  return (\n    <div className={s.tHead}>\n      <TableHeadRow />\n    </div>\n  );\n};\n\nexport default TableHead;\n","import { useContext, createContext } from 'react';\n\nexport const RowCNTXT = createContext();\nexport const useRow = () => useContext(RowCNTXT);\n\nconst RowContext = ({ children, rowIdx, rowData }) => {\n  return (\n    <RowCNTXT.Provider value={{ rowData, rowIdx }}>\n      <>{children}</>\n    </RowCNTXT.Provider>\n  );\n};\n\nexport default RowContext;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { useRow } from '../TableRows/RowContext';\n\nimport s from './TableCells.module.scss';\n\nconst CellText = ({ title, idx, className = '' }) => {\n  const { rowData } = useRow();\n  const content = rowData[title?.action] || '---';\n  const actionClassName = content !== '---' ? s[title?.action] : s.empty;\n  const classNames = [s.coll, actionClassName, ...className].join(' ');\n\n  return (\n    <div className={classNames} title={content}>\n      <span className={s.cellInner}>{content}</span>\n    </div>\n  );\n};\n\nCellText.propTypes = {};\n\nexport default CellText;\n","import { useTable } from '../TableContext';\nimport CellText from '../TebleCells/CellText';\nimport s from './TableRow.module.scss';\nconst TableRow = () => {\n  const { tableTitles = [], rowGrid = {} } = useTable();\n\n\n  const styles = {\n    ...rowGrid,\n  };\n\n  return (\n    <>\n      <div style={styles} className={s.row}>\n        {tableTitles.map((title, idx) => (\n          <CellText key={title.id} title={title} idx={idx} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default TableRow;\n","import React from 'react';\nimport { useTable } from './TableContext';\nimport RowContext from './TableRows/RowContext';\nimport TableRow from './TableRows/TableRow';\nimport s from './TableList.module.scss';\nconst TableBody = () => {\n  const { visiblePosts = [] } = useTable();\n  return (\n    <div className={s.tBody}>\n      {visiblePosts.map((rowData, idx) => (\n        <RowContext key={rowData.id} rowData={rowData} idx={idx}>\n          <TableRow />\n        </RowContext>\n      ))}\n    </div>\n  );\n};\n\nexport default TableBody;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nimport TableContext from './TableContext';\n\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\n\nimport s from './TableList.module.scss';\n\nconst TableList = props => {\n  return (\n    <TableContext\n      value={{\n        ...props,\n      }}\n    >\n      <div className={[s.table, s.orders]}>\n        <TableHead />\n        <TableBody />\n      </div>\n    </TableContext>\n  );\n};\n\nTableList.propTypes = {};\n\nexport default TableList;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\n// todo date\n// todo string\n// todo orderStatus\n// todo list\n// todo amount\nexport const ordersTableTitles = [\n  {\n    id: nanoid(3),\n    name: 'Дата',\n    dataTitle: 'createdAt',\n    action: 'date',\n    width: 105,\n    filter: false,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Змінено',\n    dataTitle: 'updatedAt',\n    action: 'date',\n    width: 105,\n    filter: false,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Номер',\n    dataTitle: 'orderNumber',\n    action: 'string',\n    width: 120,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Статус',\n    dataTitle: 'orderStatus',\n    action: 'orderStatus',\n    width: 100,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Менеджер',\n    dataTitle: 'managerName',\n    action: 'string',\n    width: 120,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Вартість',\n    dataTitle: 'amount',\n    action: 'amount',\n    width: 80,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Валюта',\n    dataTitle: 'currency',\n    action: 'string',\n    width: 70,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Тип',\n    dataTitle: 'orderType',\n    action: 'orderType',\n    width: 100,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Отримувач',\n    dataTitle: 'recieverName',\n    action: 'string',\n    width: 160,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Замовник',\n    dataTitle: 'customerName',\n    action: 'string',\n    width: 160,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Інвойси',\n    dataTitle: 'invoicesList',\n    action: 'list',\n    width: 170,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'ТТН',\n    dataTitle: 'ttnList',\n    action: 'list',\n    width: 170,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Перевізник',\n    dataTitle: 'transporterName',\n    action: 'string',\n    width: 120,\n    filter: true,\n    visible: true,\n  },\n\n  {\n    id: nanoid(3),\n    name: 'Призначення',\n    dataTitle: 'destination',\n    action: 'string',\n    width: 100,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Склади',\n    dataTitle: 'storeList',\n    action: 'list',\n    width: 150,\n    filter: true,\n    visible: true,\n  },\n  {\n    id: nanoid(3),\n    name: 'Коментар',\n    dataTitle: 'userComment',\n    action: 'string',\n    width: 200,\n    filter: true,\n    visible: true,\n  },\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"pageFlex\":\"PageOrders_pageFlex__SX4hv\",\"sectionTopFlex\":\"PageOrders_sectionTopFlex__wrAG3\",\"sectionBottomFlex\":\"PageOrders_sectionBottomFlex__whXpb\",\"sectionInnerLeft\":\"PageOrders_sectionInnerLeft__+UYv4\",\"sectionInnerRight\":\"PageOrders_sectionInnerRight__SRqI6\"};","// import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Block from 'components/Block/Block';\n\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchAllOrders } from 'redux/orders/ordersThunks';\n// import { selectOrders } from 'redux/selectors';\n// import {\n//   actionChangeSearchQuery,\n//   actionChangeSearchParam,\n// } from 'redux/orders/ordersActions';\nimport FormPrimary from 'components/Forms/FormPrimary/FormPrimary';\nimport TableList from 'components/TableList/BlockTable';\n\nimport { ordersTableTitles } from 'data/ordersTableTitles';\n\nimport s from './PageOrders.module.scss';\n\nconst PageOrders = () => {\n  // const { orders } = useSelector(selectOrders);\n\n  // const dispatch = useDispatch();\n  // const blockParams = {\n  //   blockFilter: true,\n  //   blockTable: true,\n  //   pageSelector: selectOrders,\n  // };\n  // const blockFilterParams = {\n  //   tableTitles: ordersTableTitles,\n  //   searchQueryAction: actionChangeSearchQuery,\n  //   searchParamAction: actionChangeSearchParam,\n  // };\n  // const blockTableParams = {\n  //   tableTitles: ordersTableTitles,\n  //   tableData: orders,\n  // };\n\n  // useEffect(() => {\n  //   dispatch(fetchAllOrders());\n  // }, [dispatch]);\n  return (\n    <div className={s.pageFlex}>\n      <section className={s.sectionTopFlex}>\n        <Block blockFilter title=\"Замовлення\" iconId=\"list\" tableTitles={ordersTableTitles} actions=\"withFilter\" filter>\n          <TableList />\n        </Block>\n      </section>\n\n      <section className={s.sectionBottomFlex}>\n        <div className={s.sectionInnerLeft}>\n          <Block title=\"Деталі\" iconId=\"info\" actions=\"primary\">\n            <FormPrimary formTitle=\"Деталі замовлення\" />\n          </Block>\n        </div>\n        <div className={s.sectionInnerRight}>\n          <Block title=\"ТТН\" iconId=\"ttn\" actions=\"primary\">\n          <FormPrimary formTitle=\"ТТН до замовлення\" />\n          <FormPrimary formTitle=\"Рахунок до замовлення\" />\n          </Block>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPageOrders.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default PageOrders;\n"],"names":["children","onSubmit","onReset","formTitle","isFormDisabled","useBlock","className","s","ButtonIcon","iconId","styleType","type","styles","width","minHeight","iconSize","TableCNTXT","createContext","useTable","useContext","value","tableTitles","useState","selectedAll","setSelectedAll","rowGrid","display","gridTemplateColumns","length","Provider","ts","title","idx","classNames","action","join","name","style","map","id","RowCNTXT","rowIdx","rowData","content","actionClassName","visiblePosts","props","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","ordersTableTitles","dataTitle","filter","visible","Block","blockFilter","actions","FormPrimary"],"sourceRoot":""}