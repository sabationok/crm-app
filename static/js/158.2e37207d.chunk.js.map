{"version":3,"file":"static/js/158.2e37207d.chunk.js","mappings":"uJAoDA,UA5CkB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACbC,EAAY,CAChBC,OAAO,SAAC,KAAD,IACPC,UAAU,SAAC,KAAD,IACVC,SAAS,SAAC,KAAD,IACTC,OAAO,SAAC,KAAD,IACPC,UAAU,SAAC,KAAD,KAoBZ,OACE,iCACE,UAAC,KAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,QAEF,SAAC,KAAD,UAAcN,EAAOC,EAAUD,GAAQC,EAAUC,UAGtD,C","sources":["components/AppPages/PageAdmin.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import { useSearchParams } from 'react-router-dom';\n\nimport { MinTabletXl, MaxToTablet } from 'components/DeviceTypeInformer/DeviceTypeController';\nimport { BlockAdmin, BlockManagers, BlockVendors, BlockAdminRules, BlockAdminSettings } from 'components/Blocks/BlocksMap';\n// import { useEffect } from 'react';\n\nconst PageAdmin = ({ path }) => {\n  const blocksMap = {\n    admin: <BlockAdmin />,\n    managers: <BlockManagers />,\n    vendors: <BlockVendors />,\n    roles: <BlockAdminRules />,\n    settings: <BlockAdminSettings />,\n  };\n\n  // const [searchParams, setSearchParams] = useSearchParams();\n\n  // console.log(allSearchParams());\n  // useEffect(() => {\n  //   let arr = [];\n  //   const allSearchParams = () => {\n  //     searchParams.forEach((value, key) => {\n  //       arr.push({ [key]: value });\n  //     });\n  //     return arr;\n  //   };\n\n  //   if (allSearchParams().length !== 0) {\n  //     setSearchParams({ set: 'sdvsfv' });\n  //   }\n  // }, [searchParams, setSearchParams]);\n\n  return (\n    <>\n      <MinTabletXl>\n        <BlockAdmin />\n        <BlockManagers />\n        <BlockVendors />\n        <BlockAdminRules />\n        <BlockAdminSettings />\n      </MinTabletXl>\n      <MaxToTablet>{path ? blocksMap[path] : blocksMap.admin}</MaxToTablet>\n    </>\n  );\n};\n\nPageAdmin.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default PageAdmin;\n"],"names":["path","blocksMap","admin","managers","vendors","roles","settings"],"sourceRoot":""}